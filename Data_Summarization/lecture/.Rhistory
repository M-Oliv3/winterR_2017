boxplot(bike$length~bike$numLanes)
tapply(bike$length,bike$type,
quantile,na.rm=TRUE)
tapply(bike$length,bike$numLanes,
quantile,na.rm=TRUE)
?seq
5;1
5:1
x = c("boy", "girl", "girl", "boy", "girl")
x
x = factor(x)
x
x = c("boy", "girl", "girl", "boy", "girl")
factor(x, ordered = TRUE)
cc = factor(c("case","case","case",
"control","control","control"))
cc
relevel(cc, ref = "control")
rep(c("boy","girl"),each=50)
rep(c("boy","girl"),times=50)
rep(c("boy","girl"),each=2,times=5)
cx = cut(x, breaks=c(0,10,25,50,100), labels=FALSE)
x=1:100
cx = cut(x, breaks=c(0,10,25,50,100), labels=FALSE)
cx
x = nrorm(100)
x = rnorm(100)
cut(x, breaks = quantile(x))
cut(x, breaks = quantile(x, c(0.33, 0.67)))
cut(x, breaks = quantile(x, c(0,0.33, 0.67,1)))
cc = cut(x, breaks = quantile(x, c(0,0.33, 0.67,1)))
cc
table(cc)
?cut
cut(x, breaks = quantile(x, c(0,0.33, 0.67,1)),
include.lowest = TRUE)
table(cut(x, breaks = quantile(x, c(0,0.33, 0.67,1))))
table(cut(x, breaks = quantile(x, c(0,0.33, 0.67,1)),
include.lowest = TRUE))
circ = read.csv("http://www.aejaffe.com/winterR_2016/data/Charm_City_Circulator_Ridership.csv",
header=TRUE,as.is=TRUE)
library(lubridate) # great for dates!
suppressPackageStartupMessages(library(dplyr))
circ = mutate(circ, newDate2 = mdy(date))
head(circ$newDate2)
install.packages("lubridate")
library(lubridate) # great for dates!
suppressPackageStartupMessages(library(dplyr))
circ = mutate(circ, newDate2 = mdy(date))
head(circ$newDate2)
circ$newDate2[50] - circ$newDate2[45]
as.numeric(circ$newDate2[50] - circ$newDate2[45])
nv = circ$newDate2+50
head(circ$newDate2 - nv)
class(nv)
str(circ$newDate2)
as.numeric(circ$newDate2)
head(as.numeric(circ$newDate2))
?POSIXct
''
plot(circ$orangeAverage ~ circ$newDate2)
as.data.frame
?as.data.frame
ar = array(1:27, c(3,3,3))
ar
mylist <- list(letters=c("A", "b", "c"),
numbers=1:3, matrix(1:25, ncol=5))
mylist <- list(letters=c("A", "b", "c"),
numbers=1:3, matrix(1:25, ncol=5))
mylist[1:2]
mylist[1]
class(mylist[1])
length(mylist[1])
mylist[[1]]
class(mylist[[1]])
head(circ)
circ[[1]]
head(circ[[1]])
> dayList = split(circ,circ$day)
dayList = split(circ,circ$day)
length(dayList)
class(dayList)
head(dayList[[1]])
names(dayList)
head(dayList$Friday)
head(dayList)
lapply(dayList, head, n=2)
?as
?ceiling
data(iris)
head(iris, 3)
?scale
log.ir <- log(iris[, 1:4])
ir.species <- iris[, 5]
ir.pca <- prcomp(log.ir, center = TRUE, scale = TRUE)
ir.pca
summary(ir.pca)
ir.pca$x[,1]
head(ir.pca$x)
mean(1:20)
return2a = function(x) {
x[2]
}
4500+1200
100*12
100*13
5700+1300
5700+1300+1000
2500-800
2500-8000
25000-8000
17000/149
17000/140
4500+1200+1200
7900+300
7900+3000
3000+1600
5600
120*130
15600+600
15600+6000
21600+2000
120*20
120*.20
120+24
144*130
120*130
exp(5)
exp(10)
exp(10)
exp(15)
load("~/../Dropbox/AZ_eQTL_Results/DE_statistics_adjAndQsva.rda")
library(GenomicRanges)
source("https://bioconductor.org/biocLite.R")
biocLite("GenomicRanges")
load("~/../Dropbox/AZ_eQTL_Results/DE_statistics_adjAndQsva.rda")
head(outGene)
library(readxl)
x = read_excel("~/../Downloads/Differential Expression AA and CAUC Combined 02052016.xlsx")
head(x)
str(x)
y = outGene[x$`ENSEMBL ID`]
y
head(y)
plot(x$`FOLD CHANGE`, y$log2FC_adj)
2^-20
2^-30
x1 = 1:10
x2 = 0:9
y1 = 1:10
y2 = 0:9
plot(c(x1,x2), c(y1,y2))
x1 = 1:10
x2 = 2:11
y1 = 1:10
y2 = 0:9
plot(c(x1,x2), c(y1,y2))
lines(c(x1[i], x2[i]), c(y1[i], y2[i]))
for(i in 1:10) {
lines(c(x1[i], x2[i]), c(y1[i], y2[i]))
}
plot(c(x1,x2), c(y1,y2),
xlab="T8", ylab="T0")
for(i in 1:10) {
lines(c(x1[i], x2[i]), c(y1[i], y2[i]))
}
library(lme4)
d = data.frame(x=c(1:10,2:11), y=c(1:10,0:9),
ID=rep(1:10,2))
d
plot(d$x, d$y)
d = d[order(d$ID),]
plot(d$x, d$y)
for(i in 1:10) {lines(d$x[2*(i-1):2*i],
d$x[2*(i-1):2*i])}
d
plot(d$x, d$y)
for(i in 1:10) {lines(d$x[2*(i-1):2*i],
d$y[2*(i-1):2*i])}
plot(d$x, d$y)
for(i in 1:10) {lines(d$x[(2*i-1):2*i],
d$y[(2*i-1):2*i])}
summary(lm(c(y1,y2) ~ c(x1,x2)))
id = rep(1:10,2)
summary(lmer(c(y1,y2) ~ c(x1,x2)) + (1|id))
summary(lmer(c(y1,y2) ~ c(x1,x2) + (1|id)))
summary(lm(c(y1,y2) ~ c(x1,x2)))$coef
summary(lmer(c(y1,y2) ~ c(x1,x2) + (1|id)))$coef
options(warn=-1)
x1 = 1:10
x2 = 2:11
y1 = 1:10
y2 = 0:9
plot(c(x1,x2), c(y1,y2),
xlab="T8", ylab="T0")
for(i in 1:10) {
lines(c(x1[i], x2[i]), c(y1[i], y2[i]))
}
# linear
summary(lm(c(y1,y2) ~ c(x1,x2)))$coef
id = rep(1:10,2)
library(lme4)
library(lmerTest)
summary(lmer(c(y1,y2) ~ c(x1,x2) + (1|id)))$coef
options(warn=-1)
x1 = 1:10
x2 = 2:11
y1 = 1:10
y2 = 0:9
plot(c(x1,x2), c(y1,y2),
xlab="T8", ylab="T0")
for(i in 1:10) {
lines(c(x1[i], x2[i]), c(y1[i], y2[i]))
}
# linear
summary(lm(c(y1,y2) ~ c(x1,x2)))$coef
id = rep(1:10,2)
library(lme4)
library(lmerTest)
summary(lmer(c(y1,y2) ~ c(x1,x2) + (1|id)))$coef
y1 = rnorm(12)
rep(0:1, 6)
y2 = rep(0:1, each = 6) + nnorm(12,sd=0.25)
y1 = rnorm(12)
y2 = y1 + rep(0:1, each = 6) + rnorm(12,sd=0.25)
set.seed(34)
x = rep(0:1, each = 6)
y1 = rnorm(12)
y2 = y1+ x  + rnorm(12,sd=0.25)
plot(y1,y2)
x = rep(0:1, each = 6)
y1 = rnorm(12)
x = rep(0:1, each = 6)
y1 = runif(12)
1.717615e-05 * 400000
1.543801e-04 * 30000
?read.csv
mat = rbind(c(20, 1,22, 44, 122,51,  7),
c(1, 7, 2, 25, 46, 98, 50, 6))
mat = rbind(c(20, 1,22, 44, 122,51,  7),
c(7, 2, 25, 46, 98, 50, 6))
rownames(mat) = c("Cont","Dx")
colnames(mat) = 0:6
mat
chisq.test(mat)
prop.table(mat,1)
propt = prop.table(mat,1)
rowSums(propt[,4:7])
rowSums(propt[,5:7])
as.data.frame(mat)
as.data.frame.matrix(mat)
dat = data.frame(Dx = rep(rownames(mat), rowSums(mat)))
head(dat)
dat
dim(dat)
mat
head(dat)
dat = data.frame(Dx = rep(rownames(mat), rowSums(mat)),
OC = rep(colnames(mat), colSums(mat)))
head(dat)
head(dat,30)
dat = data.frame(Dx = rep(rownames(mat), rowSums(mat)),
OC =  c(rep(colnames(mat), mat[1,]),
rep(colnames(mat), mat[2,])))
head(dat)
ma
mat
dat[1:30,]
table(dat)
mat
dat$Dx = factor(dat$D)
dat = data.frame(Dx = rep(rownames(mat), rowSums(mat)),
OC =  c(rep(colnames(mat), mat[1,]),
rep(colnames(mat), mat[2,])))
dat$Dx = factor(dat$Dx)
summary(glm(Dx ~ OC, data=dat, family = "binomial"))
dat$OC = as.integer(dat$OC)
summary(glm(Dx ~ OC, data=dat, family = "binomial"))
head(dat)
head(dat)
tapply(dat$OC, dat$Dx, mean)
mat = rbind(c(20, 1,22, 44, 122,51,  7),
c(7, 2, 25, 46, 98, 50, 6))
rownames(mat) = c("Cont","Dx")
colnames(mat) = 0:6
chisq.test(mat)
propt = prop.table(mat,1)
rowSums(propt[,5:7])
dat = data.frame(Dx = rep(rownames(mat), rowSums(mat)),
OC =  c(rep(colnames(mat), mat[1,]),
rep(colnames(mat), mat[2,])))
dat$Dx = factor(dat$Dx)
dat$OC = as.integer(dat$OC)
tapply(dat$OC, dat$Dx, mean)
source("http://bioconductor.org/biocLite.R")
biocLite("EBImage")
library(EBImage)
x = readImage(system.file('images', 'nuclei.tif', package='EBImage'))
display(x)
y = thresh(x, 10, 10, 0.05)
display(y)
?thresh
pnorm(1.68 )
pnorm(2.9)/2
pnorm(2.9,lower=TRUE)/2
pnorm(2.9,lower=FALSE)/2
pnorm(2.9,lower=FALSE)*2
pt(1.68, df = 170)
pt(1.68, df = 170, lower=TRUE)
pt(1.68, df = 170, lower=FALSE)
mat = matrix(c(68,54,18,26), nr = 2, byrow=TRUE)
mat
chisq.test(mat)
68*26/54/18
load("C:/Users/Andrew/Dropbox/AZ_eQTL_Results/Round3_threeSets/merged_eqtls_Round3_threeDataset.rda")
ls()
head(allEqtl)
x = allEqtl[allEqtl$exprsSymbol == "GRM3",]
head(x)
x = allEqtl[which(allEqtl$exprsSymbol == "GRM3"),]
head(x)
set.seed(432)
y = matrix(rnorm(20*1000), nc = 20)
x = rep(0:1, 10)
z = matrix(rnorm(20*10),nc=10)
coefMat = apply(y, 1, function(yy) summary(lm(yy~x+z))[2,c(1:4)])
lm(y[1,] ~ x+z)
coefMat = apply(y, 1, function(yy) summary(lm(yy~x+z))$coef[2,c(1:4)])
head(coefMat)
coefMat = apply(y, 1, function(yy) summary(lm(yy~x+z))$coef[2,c(1,4)])
library(MASS)
?step
yy = y[1,]
f = lm(yy~x+z)
step(f, ~x)
step(f)
step(f,list(lower = ~x, upper = ~x+z))
s = step(f,list(lower = ~x, upper = ~x+z))
s
summary(s)
s = step(f,list(lower = ~x,
upper = ~x+as.data.frame(z))
)
s = step(f,list(lower = ~x,
upper = ~x+z[,1]+z[,2]+z[,3]+
z[,4]+z[,5]+z[,6]+z[,7]+z[,8]+
z[,9] + z[,10]))
z
s = step(f,list(lower = ~x,
upper = ~x+z[,1]+z[,2]+z[,3]+
z[,4]+z[,5]+z[,6]+z[,7]+z[,8]+
z[,9] + z[,10]))
dim(z)
f = lm(yy~x+z[,1]+z[,2]+z[,3]+
z[,4]+z[,5]+z[,6]+z[,7]+z[,8]+
z[,9] + z[,10])
f
s = step(f,list(lower = ~x,
upper = ~x+z[,1]+z[,2]+z[,3]+
z[,4]+z[,5]+z[,6]+z[,7]+z[,8]+
z[,9] + z[,10]))
summary(s)$coef[2,c(1,4)])
summary(s)$coef[2,c(1,4)]
stepCoefMat = apply(y, 1, function(yy) {
f = lm(yy~x+z[,1]+z[,2]+z[,3]+
z[,4]+z[,5]+z[,6]+z[,7]+z[,8]+
z[,9] + z[,10])
s = step(f,list(lower = ~x,
upper = ~x+z[,1]+z[,2]+z[,3]+
z[,4]+z[,5]+z[,6]+z[,7]+z[,8]+
z[,9] + z[,10]))
summary(s)$coef[2,c(1,4)]
})
dim(stepCoefMat)
stepCoefMat = t(stepCoefMat)
head(stepCoefMat)
coefMat = t(apply(y, 1, function(yy) summary(lm(yy~x+z))$coef[2,c(1,4)]))
head(coefMat)
hist(coefMat[,2])
par(mfrow = c(1,2))
hist(coefMat[,2])
hist(stepCoefMat[,2])
sum(p.adjust(coefMat[,2], "fdr") < 0.05)
sum(p.adjust(stepcoefMat[,2], "fdr") < 0.05)
sum(p.adjust(stepCoefMat[,2], "fdr") < 0.05)
par(mfrow = c(1,2))
hist(coefMat[,2],xlab="p-value",main="standard")
hist(stepCoefMat[,2],xlab="p-value",ylab="stepwise")
par(mfrow = c(1,2))
hist(coefMat[,2],xlab="p-value",main="standard")
hist(stepCoefMat[,2],xlab="p-value",main="stepwise")
set.seed(432)
y = matrix(rnorm(20*5000), nc = 20)
x = rep(0:1, 10)
z = matrix(rnorm(20*10),nc=10)
# regular regression
coefMat = t(apply(y, 1, function(yy) summary(lm(yy~x+z))$coef[2,c(1,4)]))
?step
# BIC min
library(MASS)
stepCoefMat = t(apply(y, 1, function(yy) {
f = lm(yy~x+z[,1]+z[,2]+z[,3]+
z[,4]+z[,5]+z[,6]+z[,7]+z[,8]+
z[,9] + z[,10])
s = step(f,list(lower = ~x,
upper = ~x+z[,1]+z[,2]+z[,3]+
z[,4]+z[,5]+z[,6]+z[,7]+z[,8]+
z[,9] + z[,10]))
summary(s)$coef[2,c(1,4)]
}))
par(mfrow = c(1,2))
hist(coefMat[,2],xlab="p-value",main="standard")
hist(stepCoefMat[,2],xlab="p-value",main="stepwise")
sum(p.adjust(coefMat[,2], "fdr") < 0.05)
sum(p.adjust(stepCoefMat[,2], "fdr") < 0.05)
2 + 2
2 + 2
2 + 2
setwd("~/GitHub/summerR_2016/Data_Summarization/lecture")
install.packages("dplyr")
load("C:/Users/Andrew/Documents/GitHub/summerR_2016/HW/kaggle.rda")
ls()
head(cars)
table(cars$VNST)
table(cars$Make)
x = rnorm(100)
x
round(x,2)
libray(knitr)
library(knitr)
purl("Data_Summarization.Rmd")
setwd("~/GitHub/summerR_2016/Data_Cleaning/lecture")
install.packages("car")
install.packages("plyr")
purl("Data_Cleaning.html")
purl("Data_Cleaning.Rmd")
purl("Data_Cleaning.Rmd")
purl("Data_Cleaning.Rmd")
setwd("~/GitHub/summerR_2016/Manipulating_Data_in_R/lecture")
setwd("~/GitHub/summerR_2016/Data_Visualization/lecture")
library(ggplot2)
install.packages("ggplot2")
install.packages("tidyr")
library(knitr)
purl("Data_Visualization.Rmd")
?tapply
setwd("~/GitHub/summerR_2016/Data_Summarization/lecture")
purl("Data_Summarization.Rmd")
?table
x = c(0,NA,2,3,4)
x2 = c(0,0,1,1,1,2,2,3,4)
x2
table(x2)
table(x2, useNA="ifany")
table(x2, useNA="always")
tt = table(x2, useNA="ifany")
class(tt)
dim(tt)
nrow(tt)
ncol(tt)
tt
as.data.frame(tt)
df = as.data.frame(tt)
dim(df)
str(df)
length(x2)
x3 = c(1,1,1,1,2,2,2,2,2)
table(x2,3)
table(x2,x3)
tt = table(x2,x3)
class(tt)
t[1,]
tt[1,]
class(tt[1,])
tt
rowSums(tt)
colSums(tt)
tt2 = table(x2,x3)
tt2
str(tt2)
fac = factor(c(0, 1, 2, 3, 2, 3, 3, 2,2, 3),
levels = 1:4)
fac
fac = factor(c(0, 1, 2, 3, 2, 3, 3, 2,2, 3))
fac
tab <- table(c(0, 1, 2, 3, 2, 3, 3, 2,2, 3),
c(0, 1, 2, 3, 2, 3, 3, 4, 4, 3),
useNA = "always")
tab
margin.table(tab, 2)
margin.table(tab, 1)
Sal = read.csv("http://www.aejaffe.com/summerR_2016/data/Baltimore_City_Employee_Salaries_FY2014.csv",
as.is = TRUE)
head(Sal)
str(Sal)
x <- c("I really", "like writing", "R code programs")
y <- strsplit(x, split = " ") # returns a list
y
library(dplyr)
sapply(y, first)
y
sapply(y, last)
sapply(y, second)
sapply(y, nth, n=2)
?nth
grepl("Rawlings", Sal$Name)
sum(grepl("Rawlings", Sal$Name))
grep("Rawlings", Sal$Name)
grep("Rawlings", Sal$Name, value=TRUE)
head(Sal)
?save
save(fac, tab ,tt, file="~/tmp.rda")
